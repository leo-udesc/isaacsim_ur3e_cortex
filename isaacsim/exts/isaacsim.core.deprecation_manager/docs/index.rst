..
    This file was auto-generated by the 'repo_extension_docs' tool.
    Run 'repo extension_docs --help' for more details.

..
    [begin reference autogenerated]

.. _ext_isaacsim_core_deprecation_manager:

..
    [end reference autogenerated]

..
    [begin title autogenerated]

[isaacsim.core.deprecation_manager] Deprecation manager
#######################################################

..
    [end title autogenerated]

..
    [begin deprecation autogenerated]
..
    [end deprecation autogenerated]

..
    [begin version autogenerated]

**Version**: :guilabel:`0.2.2`

..
    [end version autogenerated]

..
    [begin description autogenerated]

Manage deprecated OmniGraph nodes and app/extension settings

..
    [end description autogenerated]

..
    [begin preview autogenerated]
..
    [end preview autogenerated]

..
    [begin enable-extension autogenerated]


Enable Extension
================

The extension can be enabled (if not already) in one of the following ways:

.. tab-set::
    .. tab-item:: Command-line interface
        :sync: tab_cli

        Define the next entry as an application argument from a terminal.

        .. code-block:: bash

            APP_SCRIPT.(sh|bat) --enable isaacsim.core.deprecation_manager

    .. tab-item:: Experience/extension configuration
        :sync: tab_toml

        Define the next entry under ``[dependencies]`` in an experience (``.kit``) file or an extension configuration (``extension.toml``) file.

        .. code-block:: ini

            [dependencies]
            "isaacsim.core.deprecation_manager" = {}

    .. tab-item:: Extension Manager UI
        :sync: tab_gui

        Open the *Window > Extensions* menu in a running application instance and search for ``isaacsim.core.deprecation_manager``.
        Then, toggle the enable control button if it is not already active.


..
    [end enable-extension autogenerated]

..
    [begin usage autogenerated]
..
    [end usage autogenerated]

..
    [begin api autogenerated]
..
    [end api autogenerated]

..
    [begin ogn autogenerated]
..
    [end ogn autogenerated]

..
    [begin settings autogenerated]

Settings
========

Extension Settings
------------------

The table list the extension-specific settings.

.. list-table::
    :header-rows: 1

    * - Setting name
      - Description
      - Type
      - Default value
    * - ``settings``
      - settings

      - ``list``
      - ``[{'deprecated': '/exts/omni.isaac.benchmark.services/metrics/metrics_output_folder', 'new': '/exts/isaacsim.benchmark.services/metrics/metrics_output_folder', 'update': True}, {'deprecated': '/exts/omni.isaac.benchmark.services/metrics/nvdataflow_default_test_suite_name', 'new': '/exts/isaacsim.benchmark.services/metrics/nvdataflow_default_test_suite_name', 'update': True}, {'deprecated': '/exts/omni.isaac.benchmark.services/metrics/randomize_filename_prefix', 'new': '/exts/isaacsim.benchmark.services/metrics/randomize_filename_prefix', 'update': True}, {'deprecated': '/exts/omni.isaac.vscode/host', 'new': '/exts/isaacsim.code_editor.vscode/host', 'update': True}, {'deprecated': '/exts/omni.isaac.vscode/port', 'new': '/exts/isaacsim.code_editor.vscode/port', 'update': True}, {'deprecated': '/exts/omni.isaac.vscode/carb_logs', 'new': '/exts/isaacsim.code_editor.vscode/carb_logs', 'update': True}, {'deprecated': '/exts/omni.isaac.jupyter_notebook/host', 'new': '/exts/isaacsim.code_editor.jupyter/host', 'update': True}, {'deprecated': '/exts/omni.isaac.jupyter_notebook/port', 'new': '/exts/isaacsim.code_editor.jupyter/port', 'update': True}, {'deprecated': '/exts/omni.isaac.jupyter_notebook/kill_processes_with_port_in_use', 'new': '/exts/isaacsim.code_editor.jupyter/kill_processes_with_port_in_use', 'update': True}, {'deprecated': '/exts/omni.isaac.jupyter_notebook/classic_notebook_interface', 'new': '/exts/isaacsim.code_editor.jupyter/classic_notebook_interface', 'update': True}, {'deprecated': '/exts/omni.isaac.jupyter_notebook/notebook_ip', 'new': '/exts/isaacsim.code_editor.jupyter/notebook_ip', 'update': True}, {'deprecated': '/exts/omni.isaac.jupyter_notebook/notebook_port', 'new': '/exts/isaacsim.code_editor.jupyter/notebook_port', 'update': True}, {'deprecated': '/exts/omni.isaac.jupyter_notebook/notebook_token', 'new': '/exts/isaacsim.code_editor.jupyter/notebook_token', 'update': True}, {'deprecated': '/exts/omni.isaac.jupyter_notebook/notebook_dir', 'new': '/exts/isaacsim.code_editor.jupyter/notebook_dir', 'update': True}, {'deprecated': '/exts/omni.isaac.jupyter_notebook/command_line_options', 'new': '/exts/isaacsim.code_editor.jupyter/command_line_options', 'update': True}, {'deprecated': '/exts/omni.isaac.ros_bridge/nodeName', 'new': '/exts/isaacsim.ros1.bridge/nodeName', 'update': True}, {'deprecated': '/exts/omni.isaac.ros2_bridge/ros_distro', 'new': '/exts/isaacsim.ros2.bridge/ros_distro', 'update': True}, {'deprecated': '/exts/omni.isaac.ros2_bridge/publish_without_verification', 'new': '/exts/isaacsim.ros2.bridge/publish_without_verification', 'update': True}, {'deprecated': '/exts/omni.isaac.ros2_bridge/publish_multithreading_disabled', 'new': '/exts/isaacsim.ros2.bridge/publish_multithreading_disabled', 'update': True}, {'deprecated': '/exts/omni.isaac.tf_viewer/cpp', 'new': '/exts/isaacsim.ros2.tf_viewer/cpp', 'update': True}, {'deprecated': '/exts/omni.isaac.asset_browser/folder', 'new': '/exts/isaacsim.asset.browser/folder', 'update': True}, {'deprecated': '/exts/omni.isaac.asset_browser/instanceable', 'new': '/exts/isaacsim.asset.browser/instanceable', 'update': True}, {'deprecated': '/exts/omni.isaac.asset_browser/data/timeout', 'new': '/exts/isaacsim.asset.browser/data/timeout', 'update': True}, {'deprecated': '/exts/omni.isaac.asset_browser/visible_after_startup', 'new': '/exts/isaacsim.asset.browser/visible_after_startup', 'update': True}]``
    * - ``omnigraph``
      - OmniGraph nodes

      - ``list``
      - ``[{'deprecated': 'omni.isaac.conveyor', 'new': 'isaacsim.asset.gen.conveyor'}, {'deprecated': 'omni.isaac.core_nodes', 'new': 'isaacsim.core.nodes'}, {'deprecated': 'omni.isaac.debug_draw', 'new': 'isaacsim.util.debug_draw'}, {'deprecated': 'omni.isaac.manipulators', 'new': 'isaacsim.robot.manipulators'}, {'deprecated': 'omni.isaac.range_sensor.IsaacReadLidarBeams', 'new': 'isaacsim.sensors.physx.IsaacReadLidarBeams'}, {'deprecated': 'omni.isaac.range_sensor.IsaacReadLidarPointCloud', 'new': 'isaacsim.sensors.physx.IsaacReadLidarPointCloud'}, {'deprecated': 'omni.isaac.ros_bridge', 'new': 'isaacsim.ros1.bridge'}, {'deprecated': 'omni.isaac.ros2_bridge', 'new': 'isaacsim.ros2.bridge'}, {'deprecated': 'omni.isaac.sensor.IsaacComputeRTXLidarFlatScan', 'new': 'isaacsim.sensors.rtx.IsaacComputeRTXLidarFlatScan'}, {'deprecated': 'omni.isaac.sensor.IsaacComputeRTXLidarPointCloud', 'new': 'isaacsim.sensors.rtx.IsaacComputeRTXLidarPointCloud'}, {'deprecated': 'omni.isaac.sensor.IsaacComputeRTXRadarPointCloud', 'new': 'isaacsim.sensors.rtx.IsaacComputeRTXRadarPointCloud'}, {'deprecated': 'omni.isaac.sensor.IsaacCreateRTXLidarScanBuffer', 'new': 'isaacsim.sensors.rtx.IsaacCreateRTXLidarScanBuffer'}, {'deprecated': 'omni.isaac.sensor.IsaacPrintRTXSensorInfo', 'new': 'isaacsim.sensors.rtx.IsaacPrintRTXSensorInfo'}, {'deprecated': 'omni.isaac.sensor.IsaacReadContactSensor', 'new': 'isaacsim.sensors.physics.IsaacReadContactSensor'}, {'deprecated': 'omni.isaac.sensor.IsaacReadEffortSensor', 'new': 'isaacsim.sensors.physics.IsaacReadEffortSensor'}, {'deprecated': 'omni.isaac.sensor.IsaacReadIMU', 'new': 'isaacsim.sensors.physics.IsaacReadIMU'}, {'deprecated': 'omni.isaac.sensor.IsaacReadLightBeamSensor', 'new': 'isaacsim.sensors.physx.IsaacReadLightBeamSensor'}, {'deprecated': 'omni.isaac.sensor.IsaacReadRTXLidarData', 'new': 'isaacsim.sensors.rtx.IsaacReadRTXLidarData'}, {'deprecated': 'omni.isaac.surface_gripper', 'new': 'isaacsim.robot.surface_gripper'}, {'deprecated': 'omni.isaac.wheeled_robots', 'new': 'isaacsim.robot.wheeled_robots'}, {'deprecated': 'omni.isaac.wheeled_robots.AckermannController', 'new': 'isaacsim.robot.wheeled_robots.AckermannControllerDeprecated'}, {'deprecated': 'omni.replicator.isaac.OgnCountIndices', 'new': 'isaacsim.replicator.domain_randomization.OgnCountIndices'}, {'deprecated': 'omni.replicator.isaac.OgnIntervalFiltering', 'new': 'isaacsim.replicator.domain_randomization.OgnIntervalFiltering'}, {'deprecated': 'omni.replicator.isaac.OgnOnRLFrame', 'new': 'isaacsim.replicator.domain_randomization.OgnOnRLFrame'}, {'deprecated': 'omni.replicator.isaac.OgnRandom3f', 'new': 'isaacsim.replicator.domain_randomization.OgnRandom3f'}, {'deprecated': 'omni.replicator.isaac.OgnWritePhysicsArticulationView', 'new': 'isaacsim.replicator.domain_randomization.OgnWritePhysicsArticulationView'}, {'deprecated': 'omni.replicator.isaac.OgnWritePhysicsRigidPrimView', 'new': 'isaacsim.replicator.domain_randomization.OgnWritePhysicsRigidPrimView'}, {'deprecated': 'omni.replicator.isaac.OgnWritePhysicsSimulationContext', 'new': 'isaacsim.replicator.domain_randomization.OgnWritePhysicsSimulationContext'}, {'deprecated': 'omni.replicator.isaac.OgnSampleBetweenSpheres', 'new': 'isaacsim.replicator.examples.OgnSampleBetweenSpheres'}, {'deprecated': 'omni.replicator.isaac.OgnSampleInSphere', 'new': 'isaacsim.replicator.examples.OgnSampleInSphere'}, {'deprecated': 'omni.replicator.isaac.OgnSampleOnSphere', 'new': 'isaacsim.replicator.examples.OgnSampleOnSphere'}, {'deprecated': 'omni.replicator.isaac.OgnDope', 'new': 'isaacsim.replicator.writers.OgnDope'}, {'deprecated': 'omni.replicator.isaac.OgnPose', 'new': 'isaacsim.replicator.writers.OgnPose'}]``

The extension-specific settings can be either specified (set) or retrieved (get) in one of the following ways:

.. tab-set::
    .. tab-item:: Set setting

        .. tab-set::
            .. tab-item:: Command-line interface
                :sync: tab_cli

                Define the key and value of the setting as an application argument from a terminal.

                .. code-block:: bash

                    APP_SCRIPT.(sh|bat) --/exts/isaacsim.core.deprecation_manager/SETTING_NAME=SETTING_VALUE

            .. tab-item:: Experience/extension configuration
                :sync: tab_toml

                Define the key and value of the setting under ``[settings]`` in an experience (``.kit``) file or an extension configuration (``extension.toml``) file.

                .. code-block:: ini

                    [settings]
                    exts."isaacsim.core.deprecation_manager".SETTING_NAME = SETTING_VALUE

            .. tab-item:: By programming
                :sync: tab_carb

                Define the key and value of the setting using the carb framework (in Python).

                .. code-block:: python

                    import carb

                    settings = carb.settings.get_settings()
                    settings.set("/exts/isaacsim.core.deprecation_manager/SETTING_NAME", SETTING_VALUE)

    .. tab-item:: Get setting

        .. tab-set::
            .. tab-item:: By programming
                :sync: tab_carb

                Define the key to query the value of the setting using the carb framework (in Python).

                .. code-block:: python

                    import carb

                    settings = carb.settings.get_settings()
                    value = settings.get("/exts/isaacsim.core.deprecation_manager/SETTING_NAME")


..
    [end settings autogenerated]
