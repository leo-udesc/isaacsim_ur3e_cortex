#usda 1.0
(
    doc ="""Generated from node description file OgnIsaacPassthroughImagePtr.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_isaacsim_core_nodes_IsaacPassthroughImagePtr" (
        docs="""Isaac Sim Node passes a pointer through without changing it"""
    )
    {
        token node:type = "isaacsim.core.nodes.IsaacPassthroughImagePtr"
        int node:typeVersion = 1

        # 7 attributes
        custom uint inputs:bufferSize = 0 (
            docs="""Size (in bytes) of the buffer (0 if the input is a texture)"""
        )
        custom int inputs:cudaDeviceIndex = -1 (
            docs="""Index of the device where the data lives (-1 for host data)"""
        )
        custom uint64 inputs:dataPtr = 0 (
            docs="""pointer to pass throuh"""
        )
        custom uint inputs:execIn (
            docs="""The input execution port"""
        )
        custom uint64 inputs:format = 0 (
            docs="""Format"""
        )
        custom uint inputs:height = 0 (
            docs="""Buffer array height"""
        )
        custom uint inputs:width = 0 (
            docs="""Buffer array width"""
        )

        # 7 attributes
        custom uint outputs:bufferSize (
            docs="""Size (in bytes) of the buffer (0 if the input is a texture)"""
        )
        custom int outputs:cudaDeviceIndex = -1 (
            docs="""Index of the device where the data lives (-1 for host data)"""
        )
        custom uint64 outputs:dataPtr (
            docs="""pointer to pass throuh"""
        )
        custom uint outputs:execOut (
            docs="""The output execution port"""
        )
        custom uint64 outputs:format (
            docs="""Format"""
        )
        custom uint outputs:height (
            docs="""Buffer array height"""
        )
        custom uint outputs:width (
            docs="""Buffer array width"""
        )
    }
}
