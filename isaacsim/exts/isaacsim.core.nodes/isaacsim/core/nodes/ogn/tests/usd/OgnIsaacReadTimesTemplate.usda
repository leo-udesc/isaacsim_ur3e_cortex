#usda 1.0
(
    doc ="""Generated from node description file OgnIsaacReadTimes.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_isaacsim_core_nodes_IsaacReadTimes" (
        docs="""Read time related value from Fabric."""
    )
    {
        token node:type = "isaacsim.core.nodes.IsaacReadTimes"
        int node:typeVersion = 1

        # 3 attributes
        custom uint inputs:execIn (
            docs="""The input execution port"""
        )
        custom uint64 inputs:gpu = 0 (
            docs="""Pointer to shared context containing gpu foundations valid only in the postRender graph."""
        )
        custom uint64 inputs:renderResults = 0 (
            docs="""Render results"""
        )

        # 12 attributes
        custom uint64 outputs:durationDenominator (
            docs="""durationDenominator"""
        )
        custom int64 outputs:durationNumerator (
            docs="""durationNumerator"""
        )
        custom uint outputs:execOut (
            docs="""The output execution port"""
        )
        custom int64 outputs:externalTimeOfSimNs (
            docs="""externalTimeOfSimNs"""
        )
        custom int64 outputs:frameNumber (
            docs="""frameNumber"""
        )
        custom uint64 outputs:rationalTimeOfSimDenominator (
            docs="""rationalTimeOfSimDenominator"""
        )
        custom int64 outputs:rationalTimeOfSimNumerator (
            docs="""rationalTimeOfSimNumerator"""
        )
        custom uint64 outputs:sampleTimeOffsetInSimFrames (
            docs="""sampleTimeOffsetInSimFrames"""
        )
        custom double outputs:simulationTime (
            docs="""Current Simulation Time in Seconds"""
        )
        custom double outputs:simulationTimeMonotonic (
            docs="""Current Monotonic Simulation Time in Seconds"""
        )
        custom int64 outputs:swhFrameNumber (
            docs="""swhFrameNumber"""
        )
        custom double outputs:systemTime (
            docs="""Current System Time in Seconds"""
        )
    }
}
