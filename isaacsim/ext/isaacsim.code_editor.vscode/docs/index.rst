..
    This file was auto-generated by the 'repo_extension_docs' tool.
    Run 'repo extension_docs --help' for more details.

..
    [begin reference autogenerated]

.. _ext_isaacsim_code_editor_vscode:

..
    [end reference autogenerated]

..
    [begin title autogenerated]

[isaacsim.code_editor.vscode] VS Code integration
#################################################

..
    [end title autogenerated]

..
    [begin deprecation autogenerated]
..
    [end deprecation autogenerated]

..
    [begin version autogenerated]

**Version**: :guilabel:`1.0.5`

..
    [end version autogenerated]

..
    [begin description autogenerated]

VS Code version of Omniverse's script editor

..
    [end description autogenerated]

..
    [begin preview autogenerated]
..
    [end preview autogenerated]

..
    [begin enable-extension autogenerated]


Enable Extension
================

The extension can be enabled (if not already) in one of the following ways:

.. tab-set::
    .. tab-item:: Command-line interface
        :sync: tab_cli

        Define the next entry as an application argument from a terminal.

        .. code-block:: bash

            APP_SCRIPT.(sh|bat) --enable isaacsim.code_editor.vscode

    .. tab-item:: Experience/extension configuration
        :sync: tab_toml

        Define the next entry under ``[dependencies]`` in an experience (``.kit``) file or an extension configuration (``extension.toml``) file.

        .. code-block:: ini

            [dependencies]
            "isaacsim.code_editor.vscode" = {}

    .. tab-item:: Extension Manager UI
        :sync: tab_gui

        Open the *Window > Extensions* menu in a running application instance and search for ``isaacsim.code_editor.vscode``.
        Then, toggle the enable control button if it is not already active.


..
    [end enable-extension autogenerated]

..
    [begin usage autogenerated]
..
    [end usage autogenerated]

..
    [begin api autogenerated]
..
    [end api autogenerated]

..
    [begin ogn autogenerated]
..
    [end ogn autogenerated]

..
    [begin settings autogenerated]

Settings
========

Extension Settings
------------------

The table list the extension-specific settings.

.. list-table::
    :header-rows: 1

    * - Setting name
      - Description
      - Type
      - Default value
    * - ``host``
      - IP address where the extension server will listen for connections.

      - ``str``
      - ``'0.0.0.0'``
    * - ``port``
      - Port number where the extension server will listen for connections.

      - ``int``
      - ``8226``
    * - ``carb_logs``
      - Whether to publish incoming carb logging messages.

      - ``bool``
      - ``True``

The extension-specific settings can be either specified (set) or retrieved (get) in one of the following ways:

.. tab-set::
    .. tab-item:: Set setting

        .. tab-set::
            .. tab-item:: Command-line interface
                :sync: tab_cli

                Define the key and value of the setting as an application argument from a terminal.

                .. code-block:: bash

                    APP_SCRIPT.(sh|bat) --/exts/isaacsim.code_editor.vscode/SETTING_NAME=SETTING_VALUE

            .. tab-item:: Experience/extension configuration
                :sync: tab_toml

                Define the key and value of the setting under ``[settings]`` in an experience (``.kit``) file or an extension configuration (``extension.toml``) file.

                .. code-block:: ini

                    [settings]
                    exts."isaacsim.code_editor.vscode".SETTING_NAME = SETTING_VALUE

            .. tab-item:: By programming
                :sync: tab_carb

                Define the key and value of the setting using the carb framework (in Python).

                .. code-block:: python

                    import carb

                    settings = carb.settings.get_settings()
                    settings.set("/exts/isaacsim.code_editor.vscode/SETTING_NAME", SETTING_VALUE)

    .. tab-item:: Get setting

        .. tab-set::
            .. tab-item:: By programming
                :sync: tab_carb

                Define the key to query the value of the setting using the carb framework (in Python).

                .. code-block:: python

                    import carb

                    settings = carb.settings.get_settings()
                    value = settings.get("/exts/isaacsim.code_editor.vscode/SETTING_NAME")


..
    [end settings autogenerated]
